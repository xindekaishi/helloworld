log4j.rootLogger=INFO, Console, infoLog
log4j.appender.FILE.encoding=gb2312
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
#灵活地指定布局模式的格式
log4j.appender.Console.layout.ConversionPattern=[time]%d{yyyy-MM-dd HH:mm:ss,SSS} %-2p:%m%n
 
#log4j.logger.org=DEBUG
log4j.logger.net.sf.ehcache=ERROR
#观察security的执行情况
log4j.logger.org.springframework.security=ERROR

log4j.logger.org.apache.myfaces.shared_impl.renderkit.html=ERROR

log4j.logger.org.hibernate=ERROR
log4j.logger.org.springframework=ERROR
#指定com.tm包下的所有类的等级为DEBUG
log4j.logger.com.tm=ERROR
log4j.logger.org.apache.struts2.json=ERROR
log4j.logger.java.sql.Connection=ERROR
log4j.logger.java.sql.Statement=ERROR
log4j.logger.java.sql.PreparedStatement=ERROR

#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
log4j.appender.infoLog = org.apache.log4j.DailyRollingFileAppender
#指定日志消息的输出最低层次。
log4j.appender.infoLog.Threshold = INFO
#配置日志信息的格式 
log4j.appender.infoLog.layout = org.apache.log4j.PatternLayout
 
#灵活地指定布局模式的格式
log4j.appender.infoLog.layout.ConversionPattern = [time]%d{yyyy-MM-dd HH:mm:ss,SSS} %-2p:%m%n
#指定消息输出到文件
log4j.appender.infoLog.File = D:/jiepu/loginfo/info.log
#生成文件的格式
log4j.appender.infoLog.DatePattern = '_'yyyy-MM-dd'.log'

# Log4j中有三个主要的组件，它们分别是 Logger、Appender和Layout，Log4j 允许开发人员定义多个Logger，每个Logger拥有自己的名字，Logger之间通过名字来表明隶属关系
log4j.logger.log.cas=ERROR,RollingFileForCAS
#org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件)
log4j.appender.RollingFileForCAS=org.apache.log4j.RollingFileAppender
#后缀可以是KB, MB 或者是 GB. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到mylog.log.1文件。
log4j.appender.RollingFileForCAS.MaxFileSize=20MB
#指定可以产生的滚动文件的最大数
log4j.appender.RollingFileForCAS.MaxBackupIndex=20
#指定消息输出到文件
log4j.appender.RollingFileForCAS.File=D:/jiepu/loginfo/cas_log.log
#布局自定义格式
log4j.appender.RollingFileForCAS.layout=org.apache.log4j.PatternLayout