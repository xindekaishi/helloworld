拦截器就是过滤器

Interceptor:一样是拦截请求，是拦截action的请求。方法和属性级别。
过滤器：Filter:拦截请求,拦截到URL级别。


-----AOP
面向切面的编程，用于在某个请求访问之前或者之后假如一些操作。拦截器就是Aop的一种实现策略。
它就是通过需求功能从不相关的类中分离出来，使得很多的类共享的一种行为，一旦发生变化，不必修改很多类，只需要修改这个行为（拦截器）即可。

举例：
ResourceAction save() delete() update() select()
功能：如果要进行资源文件增、删、查、改，必须一定要登录以后才能执行业务逻辑。
CoursAction() delete() update() select()
功能：如果要进行课程文件增，删，查，改必须一定要登录以后才执行业务逻辑。

如果在每一个方法中去加上一个判断是否登录的，问题和弊端是什么?
1；如果一个Action业务逻辑很多的时候，这个代码入侵了类(？)
2:也不便于维护。
3：维护成本很高(?)

怎么解决？